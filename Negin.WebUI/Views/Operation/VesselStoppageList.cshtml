@{
    Layout = null;
}
@inject IUrlHelper UrlHelper;
@model PagedData<VesselStoppage>

<link href="~/assets/plugins/global/plugins.bundle.css" rel="stylesheet" type="text/css" />
<div class="card">
<!--begin::Card header-->
<div class="card-header border-0 pt-6 px-15">
    <!--begin::Card title-->
    <div class="card-title">
        <!--begin::Search-->
        <div class="d-flex align-items-center position-relative my-1">
            <!--begin::Svg Icon | path: icons/duotune/general/gen021.svg-->
            <span class="svg-icon svg-icon-1 position-absolute ms-6">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="currentColor"></rect>
                    <path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z" fill="currentColor"></path>
                </svg>
            </span>
            <!--end::Svg Icon-->
            <input type="text" id="search" class="form-control form-control-solid w-250px ps-14" placeholder="Search port" value="@Model.PageInfo.Filter">
        </div>
        <!--end::Search-->
    </div>
    <!--begin::Card title-->
    <!--begin::Card toolbar-->
    <div class="card-toolbar">
        <!--begin::Toolbar-->
        <div class="d-flex justify-content-end">
            <!--begin::Filter-->
                <select id="filter" class="form-select form-select-solid w-200px" data-control="select2" data-hide-search="true" data-kt-datatable-responsive-filter="status" data-kt-initialized="1">
                    <option value="all" selected>All</option>
                    <option value="waitforvessel">Wait for Vessel</option>
                    <option value="inprocess">InProcess</option>
                    <option value="gone">Gone</option>
                    <option value="invoiced">Invoiced</option>
                </select>
            <!--end::Filter-->
            <!--begin::Add Vessel Stoppage-->
                <a type="button" class="btn btn-primary ms-4 min-w-lg-225px" href="/Operation/AddVesselStoppage?vesselName=@ViewBag.VesselName&voyageId=@ViewBag.VoyageId&voyageNoIn=@ViewBag.VoyageNoIn">
                <!--begin::Svg Icon | path: icons/duotune/arrows/arr075.svg-->
                <span class="svg-icon svg-icon-2">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <rect opacity="0.5" x="11.364" y="20.364" width="16" height="2" rx="1" transform="rotate(-90 11.364 20.364)" fill="currentColor"></rect>
                        <rect x="4.36396" y="11.364" width="16" height="2" rx="1" fill="currentColor"></rect>
                    </svg>
                </span>
                <!--end::Svg Icon-->Add Vessel Stoppage
            </a>
            <!--end::Add Vessel Stoppage-->
        </div>
        <!--end::Toolbar-->
        <!--begin::Group actions-->
        <div style="display:none" class="d-flex justify-content-end align-items-center d-none" data-kt-user-table-toolbar="selected">
            <div class="fw-bold me-5">
                <span class="me-2" data-kt-user-table-select="selected_count"></span>Selected
            </div>
            <button type="button" class="btn btn-danger" data-kt-user-table-select="delete_selected">DeActive Selected</button>
        </div>
        <!--end::Group actions-->
    </div>
    <!--end::Card toolbar-->
</div>
<!--end::Card header-->
<!--begin::Card body-->
<div class="card-body py-4">
    <!--begin::Table-->
    <div class="dataTables_wrapper dt-bootstrap4 no-footer">
        <div class="table-responsive">
                <table class="table align-middle table-row-dashed fs-6 gy-5 dataTable no-footer" id="kt-datatable-responsive">
                <!--begin::Table head-->
                <thead>
                    <!--begin::Table row-->
                    <tr class="text-start text-muted fw-bold fs-7 text-uppercase gs-0">
                            <th class="min-w-200px" data-bs-toggle="tooltip" data-bs-custom-class="tooltip-inverse" data-bs-placement="left" title="Estimated Time Arrival" data-priority="1">ETA</th>
                        <th class="min-w-200px" data-bs-toggle="tooltip" data-bs-custom-class="tooltip-inverse" data-bs-placement="left" title="Actual Time Arrival">ATA</th>
                        <th class="min-w-200px" data-bs-toggle="tooltip" data-bs-custom-class="tooltip-inverse" data-bs-placement="left" title="Estimated Time Departure">ETD</th>
                        <th class="min-w-200px" data-bs-toggle="tooltip" data-bs-custom-class="tooltip-inverse" data-bs-placement="left" title="Actual Time Departure">ATD</th>
                        <th class="min-w-50px">Status</th>
                        <th class="min-w-200px">OriginPort</th>
                        <th>PreviousPort</th>
                        <th>NextPort</th>
                        <th class="text-end min-w-150px sorting_disabled" data-priority="2">Actions</th>
                    </tr>
                    <!--end::Table row-->
                </thead>
                <!--end::Table head-->
                <!--begin::Table body-->
                <tbody class="text-gray-600 fw-semibold">
                    @foreach (VesselStoppage vesselStoppage in Model.Data)
                    {
                            <tr>
                                <td><div class="badge badge-light fw-bold">@Html.Raw(vesselStoppage.ETA != null ? @vesselStoppage.ETA.ToShamsiDateString(vesselStoppage.ETADayOfTheWeek) : "")</div></td>
                                <td><div class="badge badge-dark fw-bold">@Html.Raw(vesselStoppage.ATA != null ? @vesselStoppage.ATA.ToShamsiDateString(vesselStoppage.ATADayOfTheWeek) : "")</div></td>
                                <td><div class="badge badge-light fw-bold">@Html.Raw(vesselStoppage.ETD != null ? @vesselStoppage.ETD.ToShamsiDateString(vesselStoppage.ETDDayOfTheWeek) : "")</div></td>
                                <td><div class="badge badge-dark fw-bold">@Html.Raw(vesselStoppage.ATD != null ? @vesselStoppage.ATD.ToShamsiDateString(vesselStoppage.ATADayOfTheWeek) : "")</div></td>
                                <td>
                                @if (vesselStoppage.Status == VesselStoppage.VesselStoppageStatus.Gone)
                                {
                                        <span class="badge py-3 px-4 fs-7 badge-light-success">@vesselStoppage.Status</span>
                                }
                                else if (vesselStoppage.Status == VesselStoppage.VesselStoppageStatus.InProcess)
                                {
                                        <span class="badge py-3 px-4 fs-7 badge-light-primary">@vesselStoppage.Status</span>
                                }
                                else if (vesselStoppage.Status == VesselStoppage.VesselStoppageStatus.WaitForVessel)
                                {
                                        <span class="badge py-3 px-4 fs-7 badge-light-warning">@vesselStoppage.Status</span>
                                }
                                else if (vesselStoppage.Status == VesselStoppage.VesselStoppageStatus.Invoiced)
                                {
                                    <span class="badge py-3 px-4 fs-7 badge-light-info">@vesselStoppage.Status</span>
                                }
                                </td>
                                <td>@vesselStoppage.OriginPort?.PortName - @vesselStoppage.OriginPort?.PortSymbol</td>
                                <td>@vesselStoppage.PreviousPort?.PortName - @vesselStoppage.PreviousPort?.PortSymbol</td>
                                <td>@vesselStoppage.NextPort?.PortName - @vesselStoppage.NextPort?.PortSymbol</td>
                                <!--begin::Action=-->
                                <td class="text-end">
                                    @if (vesselStoppage.Status == VesselStoppage.VesselStoppageStatus.WaitForVessel || vesselStoppage.Status == VesselStoppage.VesselStoppageStatus.InProcess)
                                    {
                                        <a href="/Operation/EditVesselStoppage?vesselName=@ViewBag.VesselName&id=@vesselStoppage.Id&voyageNoIn=@ViewBag.VoyageNoIn" class="btn btn-icon btn-active-color-danger btn-bg-light btn-sm me-1" data-bs-toggle="tooltip" data-bs-custom-class="tooltip-inverse" data-bs-placement="right" title="Edit"><i class="bi bi-pencil-square fs-4"></i></a>
                                    }
                                    @if (vesselStoppage.Status == VesselStoppage.VesselStoppageStatus.Gone)
                                    {
                                        <a href="/Billing/PreInvoice?voyageId=@ViewBag.VoyageId&vesselStoppages=@vesselStoppage?.Id" class="btn btn-icon btn-active-color-danger btn-bg-light btn-sm me-1" data-bs-toggle="tooltip" data-bs-custom-class="tooltip-inverse" data-bs-placement="right" title="Pre Invoice"><i class="bi bi-coin fs-2"></i></a>
                                    }
                                </td>
                                <!--end::Action=-->
                            </tr>

                    }
                </tbody>
                <!--end::Table body-->
            </table>
            <ul class="pagination">
                <li id="previous" class="page-item previous"><a id="previous_link" class="page-link"><i class="previous"></i></a></li>
                @for (int i = 1; i <= Model.PageInfo.PageCount; i++)
                {

                        <li class="page-item @(i == Model.PageInfo.PageNumber ? "active" : "")">
                            <a href="#" id="pageNumber_link" class="page-link" >@i</a>
                        </li>

                }
                <li id="next" class="page-item next"><a id="next_link" class="page-link"><i class="next"></i></a></li>
            </ul>
        </div>
    </div>
    <!--end::Table-->
</div>
<!--end::Card body-->
</div>

<script src="~/assets/plugins/custom/datatables/datatables.bundle.js"></script>
<script src="~/assets/js/custom/apps/user-management/users/list/tableVessel.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var w = $('#kt-datatable-responsive').DataTable({
            "responsive": true,
            "paging": false,
            "info": false,
            "columnDefs": [
                { orderable: !1, targets: 0 },
                { orderable: !1, targets: 5 },
            ],
        });

        $('#search').keydown(function (event) {
            if (event.which == 13) {
                $('#show').data('filter', $('#search').val()).trigger('click');
            }
        });
        $('th:last-child').addClass("sorting_disabled").removeClass("sorting").removeClass("sorting_asc");

        if (@Model.PageInfo.PageNumber >= @Model.PageInfo.PageCount) {
            $('#next').addClass("disabled")
        }
        if (@Model.PageInfo.PageNumber <= 1) {
            $('#previous').addClass("disabled")
        }
        $('#previous_link').click(function(){
            $('#show').data('pageNumber', @Model.PageInfo.PageNumber-1).trigger('click');
        })
        $('#pageNumber_link').click(function(){
            $('#show').data('pageNumber', $('#pageNumber_link').text()).trigger('click');
        })
        $('#next_link').click(function(){
            $('#show').data('pageNumber', @Model.PageInfo.PageNumber+1).trigger('click');
        })
        
  
        var x = [];
        var e = !1;
        var y = [];
        var t = function (e, t) {
            var n = {};
            e.hasAttribute("data-bs-delay-hide") && (n.hide = e.getAttribute("data-bs-delay-hide")),
                e.hasAttribute("data-bs-delay-show") && (n.show = e.getAttribute("data-bs-delay-show")),
                n && (t.delay = n),
                e.hasAttribute("data-bs-dismiss") && "click" == e.getAttribute("data-bs-dismiss") && (t.dismiss = "click");
            var i = new bootstrap.Tooltip(e, t);
            return (
                t.dismiss &&
                "click" === t.dismiss &&
                e.addEventListener("click", function (e) {
                    i.hide();
                }),
                i
            );
        }
        x.slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]')).map(function (e) { t(e, {}) });

        "undefined" != typeof jQuery &&
        void 0 !== $.fn.select2 &&
        (y.slice.call(document.querySelectorAll('[data-control="select2"], [data-kt-select2="true"]')).map(function (e) {
            var t = { dir: document.body.getAttribute("direction") };
            "true" == e.getAttribute("data-hide-search") && (t.minimumResultsForSearch = 1 / 0), $(e).select2(t);
        }),
            !1 === e &&
            ((e = !0),
                $(document).on("select2:open", function (e) {
                    var t = document.querySelectorAll(".select2-container--open .select2-search__field");
                    t.length > 0 && t[t.length - 1].focus();
                })
            )
        );

        const s = document.querySelector('[data-kt-datatable-responsive-filter="status"]');
        $(s).on("change", (s) => {
            let o = s.target.value;
            if ("all" === o){o = ""} w.column(4).search(o).draw()
        });
    })
</script>