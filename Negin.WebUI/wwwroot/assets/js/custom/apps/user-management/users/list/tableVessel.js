"use strict"; var KTUsersList = function () { var t, e, n, o, r = document.getElementById("kt_datatable_responsive"), c = () => { r.querySelectorAll('[data-kt-users-table-filter="delete_row"]').forEach(t => { t.addEventListener("click", function (t) { t.preventDefault(); let e = t.target.closest("tr"), n = e.querySelectorAll("td")[0].innerText, o = $(e.querySelector('.id[type="hidden"]')).val(), r = $(e.querySelector('.isActive[type="hidden"]')).val(); "False" == r ? Swal.fire({ text: "Are you sure you want to active " + n + "?", icon: "warning", showCancelButton: !0, buttonsStyling: !1, confirmButtonText: "Yes, active!", cancelButtonText: "No, cancel", customClass: { confirmButton: "btn fw-bold btn-success", cancelButton: "btn fw-bold btn-active-light-primary" } }).then(function (t) { t.isConfirmed ? $.ajax({ url: "/BasicInfo/DeleteVessel", type: "POST", data: { id: o }, success: function () { Swal.fire({ text: "You have activated " + n + "!.", icon: "success", buttonsStyling: !1, confirmButtonText: "Ok, got it!", customClass: { confirmButton: "btn fw-bold btn-primary" } }).then(function () { location.reload() }).then(function () { l() }) } }) : Swal.fire({ text: customerName + " was not deactive.", icon: "error", buttonsStyling: !1, confirmButtonText: "Ok, got it!", customClass: { confirmButton: "btn fw-bold btn-primary" } }) }) : Swal.fire({ text: "Are you sure you want to delete " + n + "?", icon: "warning", showCancelButton: !0, buttonsStyling: !1, confirmButtonText: "Yes, delete!", cancelButtonText: "No, cancel", customClass: { confirmButton: "btn fw-bold btn-danger", cancelButton: "btn fw-bold btn-active-light-primary" } }).then(function (t) { t.isConfirmed ? $.ajax({ url: "/BasicInfo/DeleteVessel", type: "POST", data: { vesselId: o }, success: function () { Swal.fire({ text: "You have deleted " + n + "!.", icon: "success", buttonsStyling: !1, confirmButtonText: "Ok, got it!", customClass: { confirmButton: "btn fw-bold btn-primary" } }).then(function () { location.reload() }).then(function () { l() }) } }) : Swal.fire({ text: customerName + " was not deactive.", icon: "error", buttonsStyling: !1, confirmButtonText: "Ok, got it!", customClass: { confirmButton: "btn fw-bold btn-primary" } }) }) }) }) }, a = () => { let c = r.querySelectorAll('[type="checkbox"]'); e = document.querySelector('[data-kt-user-table-toolbar="base"]'), n = document.querySelector('[data-kt-user-table-toolbar="selected"]'), o = document.querySelector('[data-kt-user-table-select="selected_count"]'); let i = document.querySelector('[data-kt-user-table-select="delete_selected"]'); c.forEach(t => { t.addEventListener("click", function () { setTimeout(function () { l() }, 50) }) }), i.addEventListener("click", function () { Swal.fire({ text: "Are you sure you want to deactive selected users?", icon: "warning", showCancelButton: !0, buttonsStyling: !1, confirmButtonText: "Yes, deactive!", cancelButtonText: "No, cancel", customClass: { confirmButton: "btn fw-bold btn-danger", cancelButton: "btn fw-bold btn-active-light-primary" } }).then(function (e) { if (e.isConfirmed) { var n = 0; c.forEach(t => { t.checked && (n = $(t).next().val()) }), $.ajax({ url: "/Account/ToggleActiveUser", type: "POST", data: { id: n }, success: function () { Swal.fire({ text: "You have deactived all selected users!.", icon: "success", buttonsStyling: !1, confirmButtonText: "Ok, got it!", customClass: { confirmButton: "btn fw-bold btn-primary" } }).then(function () { c.forEach(e => { e.checked && t.row($(e.closest("tbody tr"))).draw() }), r.querySelectorAll('[type="checkbox"]')[0].checked = !1 }).then(function () { l(), a() }) } }) } else Swal.fire({ text: "Selected users was not deactived.", icon: "error", buttonsStyling: !1, confirmButtonText: "Ok, got it!", customClass: { confirmButton: "btn fw-bold btn-primary" } }) }) }) }; let l = () => { let t = r.querySelectorAll('tbody [type="checkbox"]'), c = !1, a = 0; t.forEach(t => { t.checked && (c = !0, a++) }), c ? (o.innerHTML = a, e.classList.add("d-none"), n.classList.remove("d-none")) : (e.classList.remove("d-none"), n.classList.add("d-none")) }; return { init: function () { r && (r.querySelectorAll("tbody tr").forEach(t => { let e = t.querySelectorAll("td"), n = e[3].innerText.toLowerCase(), o = 0, r = "minutes"; n.includes("yesterday") ? (o = 1, r = "days") : n.includes("mins") ? (o = parseInt(n.replace(/\D/g, "")), r = "minutes") : n.includes("hours") ? (o = parseInt(n.replace(/\D/g, "")), r = "hours") : n.includes("days") ? (o = parseInt(n.replace(/\D/g, "")), r = "days") : n.includes("weeks") && (o = parseInt(n.replace(/\D/g, "")), r = "weeks"); let c = moment().subtract(o, r).format(); e[3].setAttribute("data-order", c); let a = moment(e[5].innerHTML, "DD MMM YYYY, LT").format(); e[5].setAttribute("data-order", a) }), (t = $(r).DataTable({ info: !1, order: [], pageLength: 10, lengthChange: !1, columnDefs: [{ orderable: !1, targets: 0 }, { orderable: !1, targets: 6 }] })).on("draw", function () { a(), c(), l() }), a(), document.querySelector('[data-kt-user-table-filter="reset"]').addEventListener("click", function () { document.querySelector('[data-kt-user-table-filter="form"]').querySelectorAll("select").forEach(t => { $(t).val("").trigger("change") }), t.search("").draw() }), c(), (() => { let e = document.querySelector('[data-kt-user-table-filter="form"]'), n = e.querySelector('[data-kt-user-table-filter="filter"]'), o = e.querySelectorAll("select"); n.addEventListener("click", function () { var e = ""; o.forEach((t, n) => { t.value && "" !== t.value && (0 !== n && (e += " "), e += t.value) }), t.search(e).draw() }) })()) } } }(); KTUtil.onDOMContentLoaded(function () { KTUsersList.init() });